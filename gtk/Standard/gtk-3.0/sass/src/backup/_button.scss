$_dot_color: if($variant=='light', $selected_bg_color,
 lighten($selected_bg_color,15%));
@keyframes needs_attention {
	from {
		background-image: -gtk-gradient(radial,
center center, 0,
center center, 0.01,
to($_dot_color),
to(transparent));
}

to {
background-image: -gtk-gradient(radial,
center center, 0,
center center, 0.5,
to($selected_bg_color),
to(transparent));
}
}

%button,
button {
@at-root %button_basic, & {
animation: shrink 1s linear infinite;
min-height: 24px;
min-width: 16px;
padding: 2px 6px;
border: 1px solid;
border-radius: $small_radius;
outline-color: $focus_color;
outline-style: dashed;
outline-offset: -3px;
-gtk-outline-radius: $small_radius;

@include button(normal);

&.flat {
@include button(undecorated);
// to avoid adiacent buttons borders clashing when transitioning, the transition on the normal state is set
// to none, while it's added back in the hover state, so the button decoration will fade in on hover, but
// it won't fade out when the pointer leave the button allocation area. To make the transition more evident
// in this case the duration is increased.
transition: none;

&:hover {
transition: $button_transition;

&:active { transition: $button_transition; }
}

@each $state, $t in (":hover", "hover"), (":hover:backdrop", "backdrop-hover"),
(":active, &:checked", "active"), (":disabled", "insensitive"),
(":disabled:active, &:disabled:checked", "insensitive-active"), (":backdrop", "backdrop"),
(":backdrop:active, &:backdrop:checked", 'backdrop-active'), (":backdrop:disabled", 'backdrop-insensitive'),
(":backdrop:disabled:active, &:backdrop:disabled:checked", 'backdrop-insensitive-active') {
&#{$state} { @include button($t, $flat:true); }
}
}

&.default:not(.suggested-action):not(.destructive-action) {
color: if($variant=='light', black, white);
}

&:hover {
@include button(hover);
-gtk-icon-effect: highlight;
transition: $button_transition;

&:backdrop { @include button(backdrop-hover); }
}

&:active,
&:checked {
@include button(active);

transition-duration: 100ms;
}

&:hover:checked { @include button(active-hover); }

&:backdrop {
&.flat, & {
@include button(backdrop);

transition: $backdrop_transition;
outline-color: $focus_color;
-gtk-icon-effect: none;

&:active,
&:checked { @include button(backdrop-active); }

&:disabled {
@include button(backdrop-insensitive);

&:active,
&:checked { @include button(backdrop-insensitive-active); }
}
}
}

&.flat { &:backdrop, &:disabled, &:backdrop:disabled { @include button(undecorated); }}

&:disabled {
@include button(insensitive);

&:active,
&:checked { @include button(insensitive-active); }
}

&.image-button {
min-width: 24px;
padding-left: 2px;
padding-right: 2px;
}

&.text-button {
padding-left: 16px;
padding-right: 16px;
}

&.text-button.image-button {
padding-left: 8px;
padding-right: 8px;

label {
padding-left: 8px;
padding-right: 8px;
}
}

&:drop(active) {
color: $drop_target_color;
border-color: $drop_target_color;
box-shadow: inset 0 0 0 1px $drop_target_color;
}
}

@at-root %button_selected, & {
row:selected & {
@if $variant == 'light' { border-color: _border_color($selected_bg_color); }

&.flat:not(:active):not(:checked):not(:hover):not(disabled) {
color: $selected_fg_color;
border-color: transparent;

&:backdrop { color: if($variant=='light', $backdrop_base_color, $backdrop_fg_color); }
}
}
}


// big standalone buttons like in Documents pager
&.osd {
min-width: 24px;
min-height: 32px;

&.image-button { min-width: 32px; }

color: $osd_fg_color;
border-radius: $small_radius;

@include button(osd);

border: none;
box-shadow: none;

&:hover {
@include button(osd-hover);

border: none;
box-shadow: none;
}

&:active,
&:checked {
@include button(osd-active);

border: none;
box-shadow: none;
}

&:disabled {
&:backdrop, & {
@include button(osd-insensitive);

border: none;
}
}

&:backdrop {
@include button(osd-backdrop);

border: none;
}
}

//overlay / OSD style
@at-root %osd_button,
.osd & {
@include button(osd);

&:hover { @include button(osd-hover); }

&:active,
&:checked { &:backdrop, & { @include button(osd-active); }}

&:disabled { &:backdrop, & { @include button(osd-insensitive); }}

&:backdrop { @include button(osd-backdrop); }

&.flat {
@include button(undecorated);
box-shadow: none; //FIXME respect no edge on the button mixin


&:hover { @include button(osd-hover); }

&:disabled {
@include button(osd-insensitive);
background-image: none;
border-color: transparent;
box-shadow: none;
}

&:backdrop { @include button(undecorated); }

&:active,
&:checked { @include button(osd-active); }
}
}

// Suggested and Destructive Action buttons
@each $b_type, $b_color in (suggested-action, $success_color),
 (destructive-action, $destructive_color) {
&.#{$b_type} {
@include button(normal, $b_color, white);

&.flat {
@include button(undecorated);

color: $b_color; //FIXME: does it work on the dark variant?
}

&:hover { @include button(hover, $b_color, white); }

&:active,
&:checked { @include button(active, $b_color, white); }

&:backdrop,
&.flat:backdrop {
@include button(backdrop, $b_color, white);

&:active,
&:checked { @include button(backdrop-active, $b_color, white); }

&:disabled {
@include button(backdrop-insensitive);

&:active,
&:checked { @include button(backdrop-insensitive-active, $b_color, white); }
}
}

&.flat {
&:backdrop, &:disabled, &:backdrop:disabled {
@include button(undecorated);

color: transparentize($b_color, 0.2);
}
}

&:disabled {
@include button(insensitive);

&:active,
&:checked { @include button(insensitive-active, $b_color, white); }
}

.osd & {
@include button(osd, $b_color);

&:hover { @include button(osd-hover, $b_color); }

&:active,
&:checked { &:backdrop, & { @include button(osd-active, $b_color); }}

&:disabled { &:backdrop, & { @include button(osd-insensitive, $b_color); }}

&:backdrop { @include button(osd-backdrop, $b_color); }
}
&:focus { outline-color: white; }
}
}

&.destructive-action image {
-gtk-icon-shadow: 1px0px 1px darken($destructive_color, 25%),
0px1px 1px darken($destructive_color, 25%),
0px -1px 1px darken($destructive_color, 25%),
 -1px0px 1px darken($destructive_color, 25%);
&:backdrop {
-gtk-icon-shadow: 1px0px 1px darken($destructive_color, 10%),
0px1px 1px darken($destructive_color, 10%),
0px -1px 1px darken($destructive_color, 10%),
 -1px0px 1px darken($destructive_color, 10%);
}
}

.stack-switcher > & {
// to position the needs attention dot, padding is added to the button
// child, a label needs just lateral padding while an icon needs vertical
// padding added too.

> label {
padding-left: 6px;// label padding
padding-right: 6px; //
}

> image {
padding-left: 6px; // image padding
padding-right: 6px;//
padding-top: 3px;//
padding-bottom: 3px; //
}

&.text-button {
// compensate text-button paddings
padding-left: 10px;
padding-right: 10px;
}

&.image-button {
// we want image buttons to have a 1:1 aspect ratio, so compensation
// of the padding added to the GtkImage is needed
padding-left: 0;
padding-right: 0;
}

&.needs-attention {
> label,
> image { @extend %needs_attention; }

&:active,
&:checked {
> label,
> image {
animation: none;
background-image: none;
}
}
}
}




// hide separators
&.font,
&.file { separator { background-color: transparent; }}

&.font { > box > box > label { font-weight: 500; }}

// inline-toolbar buttons
.inline-toolbar &, .inline-toolbar &:backdrop {
border-radius: 2px;
border-width: 1px;
@extend %linked;
}

.primary-toolbar & { /* -gtk-icon-shadow: none; */ } // tango icons don't need shadows

.linked > &,
.linked > &:hover,
.linked > &:active,
.linked > &:checked,
.linked > &:backdrop { @extend %linked; }

.linked.vertical > &,
.linked.vertical > &:hover,
.linked.vertical > &:active,
.linked.vertical > &:checked,
.linked.vertical > &:backdrop { @extend %linked_vertical; }

&.circular { // The Bloody Circul Button
border-radius: 9999px;
-gtk-outline-radius: 9999px;

label { padding: 0; }

// the followind code is needed since we use a darker bottom border on buttons, which looks pretty
// bad with a 100% border radius (see https://bugzilla.gnome.org/show_bug.cgi?id=771205 for details),
// so on relevant states we an additional background-image with a gradient clipped on the border-box,
// so setting a transparent border would reveal it.
// FIXME: take care of colored circular button.

&:not(.flat):not(:checked):not(:active):not(:disabled):not(:backdrop),
&:hover:not(:checked):not(:active):not(:disabled):not(:backdrop),
&:checked, &:active {
border-color: $borders_color;
box-shadow: none;
}

&:not(.flat):not(:checked):not(:active):not(:disabled):not(:backdrop) {
@include button(normal);
}

&:hover:not(:checked):not(:active):not(:disabled):not(:backdrop) {
@include button(hover);
}

background-origin: padding-box, border-box;
background-clip: padding-box, border-box;
}
}

%needs_attention {
animation: needs_attention 150ms ease-in;
$_dot_shadow: _text_shadow_color();
$_dot_shadow_r: if($variant=='light',0.5,0.45);
background-image: -gtk-gradient(radial,
center center, 0,
center center, 0.5,
to($_dot_color),
to(transparent)),
-gtk-gradient(radial,
center center, 0,
center center, $_dot_shadow_r,
to($_dot_shadow),
to(transparent));
background-size: 6px 6px, 6px 6px;
background-repeat: no-repeat;

@if $variant == 'light' { background-position: right 3px, right 4px; }

@else { background-position: right 3px, right 2px; }

&:backdrop { background-size: 6px 6px, 0 0;}

&:dir(rtl) {
@if $variant == 'light' { background-position: left 3px, left 4px; }

@else { background-position: left 3px, left 2px; }
}
}


// all the following is for the +|- buttons on inline toolbars, that way
// should really be deprecated...
.inline-toolbar toolbutton > button { // redefining the button look is
// needed since those are flat...
@include button(normal);

&:hover { @include button(hover); }

&:active,
&:checked{ @include button(active); }

&:disabled {
@include button(insensitive);

&:active,
&:checked { @include button(insensitive-active); }
}

&:backdrop {
@include button(backdrop);

&:active,
&:checked { @include button(backdrop-active); }

&:disabled {
@include button(backdrop-insensitive);

&:active,
&:checked { @include button(backdrop-insensitive-active); }
}
}
}

// More inline toolbar buttons
toolbar.inline-toolbar toolbutton,
toolbar.inline-toolbar toolbutton:backdrop {
> button.flat { @extend %linked_middle; }

&:first-child > button.flat { @extend %linked:first-child; }

&:not(:first-child) > button.flat {
// linked buttons will have more defined border colors
border-left-color: $borders_color;
&:disabled { border-left-color: $insensitive_borders_color;}
}

&:last-child > button.flat { @extend %linked:last-child; }

&:only-child > button.flat { @extend %linked:only-child; }
}

%linked_middle {
border-radius: 0;
border-right-style: none;
-gtk-outline-radius: 0;
}

%linked {
@extend %linked_middle;

&:first-child {
border-top-left-radius: $small_radius;
border-bottom-left-radius: $small_radius;
-gtk-outline-radius: $small_radius 0 0 $small_radius;

}

&:last-child {
border-top-right-radius: $small_radius;
border-bottom-right-radius: $small_radius;
border-right-style: solid;
-gtk-outline-radius: 0 $small_radius $small_radius 0;
}

&:only-child {
border-radius: $small_radius;
-gtk-outline-radius: $small_radius;
border-style: solid;
}
}

%linked_vertical_middle {
border-style: solid solid none solid;
border-radius: 0;
-gtk-outline-radius: 0px;
}

%linked_vertical{
@extend %linked_vertical_middle;

&:not(:first-child) {
// linked buttons will have more defined border colors
border-top-color: $borders_color;
&:disabled { border-top-color: $insensitive_borders_color;}
}

&:first-child {
border-top-left-radius: $small_radius;
border-top-right-radius: $small_radius;
-gtk-outline-radius: $small_radius $small_radius 0 0;
}

&:last-child {
border-bottom-left-radius: $small_radius;
border-bottom-right-radius: $small_radius;
-gtk-outline-radius: 0 0 $small_radius $small_radius;
border-style: solid;
}

&:not(:last-child) {
// only the last button will have the 3d effect
box-shadow: none;
}

&:only-child {
border-radius: $small_radius;
-gtk-outline-radius: $small_radius;
border-style: solid;
}
}

%undecorated_button {
&, &:backdrop {
&, &:disabled {
background-color: transparent;
background-image: none;
border-color: transparent;
box-shadow: none;
text-shadow: none;
-gtk-icon-shadow: none;
}
}
}

/* menu buttons */
modelbutton.flat,
.menuitem.button.flat {
min-height: 26px;
padding-left: 5px;
padding-right: 5px;
border-radius: 3px;
-gtk-outline-radius: 3px;
outline-offset: -2px;

@extend %undecorated_button;

&:hover { background-color: $base_hover_color; }
&:active { background-color: $base_active_color; }

&:selected { @extend %selected_items; }

&:backdrop,
&:backdrop:hover { @extend %undecorated_button; }
}

modelbutton.flat arrow {
background: none;

&:hover { background: none; }

&.left { -gtk-icon-source: -gtk-icontheme("pan-start-symbolic"); }

&.right { -gtk-icon-source: -gtk-icontheme("pan-end-symbolic"); }
}

button.color {
padding: 4px;

colorswatch:only-child {
&, overlay { border-radius: 0; }

@if $variant == 'light' {
box-shadow: 0 1px _text_shadow_color();

.osd & { box-shadow: none; }
}
}

@if $variant == 'light' {
.osd &, & {
&:disabled,
&:backdrop,
&:active,
&:checked { colorswatch:only-child { box-shadow: none; }}
}
}
}


