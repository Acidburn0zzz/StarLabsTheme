combobox {
	arrow {
		-gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
		min-height: 16px;
		min-width: 16px;
	}
	&.linked {
		button:nth-child(2) {
			&:dir(ltr) {
				@extend %linked:last-child;
			}
			&:dir(rtl) {
				@extend %linked:first-child;
			}
		}
	}
	&:drop(active) {
		box-shadow: none;
		button.combo {
			@extend %button_basic:drop(active);
		}
	}
}

.linked > combobox > box > button.combo {
	&:dir(ltr), &:dir(rtl) {
		@extend %linked_middle;
	}
}

.linked:not(.vertical) > combobox:first-child > box > button.combo {
	@extend %linked:first-child;
}
.linked:not(.vertical) > combobox:last-child > box > button.combo {
	@extend %linked:last-child;
}

.linked:not(.vertical) > combobox:only-child > box > button.combo {
	@extend %linked:only-child;
}

.linked:not(.vertical) > combobox:not(:first-child) > box > button.combo {
//	border-left-color: $borders_color;
	&:disabled {
//		border-left-color: $insensitive_borders_color;
	}
}

.linked.vertical > combobox > box > button.combo {
	@extend %linked_vertical_middle;
}

.linked.vertical > combobox:first-child > box > button.combo {
	@extend %linked_vertical:first-child;
}

.linked.vertical > combobox:last-child > box > button.combo {
	@extend %linked_vertical:last-child;
}

.linked.vertical > combobox:only-child > box > button.combo {
	@extend %linked_vertical:only-child;
}

.linked.vertical > combobox:not(:first-child) > box > button.combo {
//	border-top-color: $borders_color;
	&:disabled {
//		border-top-color: $insensitive_borders_color;
	}
}


