

/***************
 * Header bars *
 ***************/
%titlebar, headerbar {
	padding: 0 6px;
	min-height: 40px;
	border-radius: 0;
	@include fill(normal, $alpha3, $header);
	&:backdrop {
		@include fill(normal, $alpha3, $header);
	}
	label:backdrop {
		color: inherit;
	}
	.title {
		font-weight: 500;
		padding-left: 12px;
		padding-right: 12px;
	}
	.subtitle {
		font-size: smaller;
		padding-left: 12px;
		padding-right: 12px;
	}
	separator {
		min-width: 0;
	}

	&:not(:only-child):first-child {
		border-right-width: 0;
	}
	&:not(:only-child):not(:first-child) {
		border-left-width: 0;
	}
	& {
		switch {
			@include switch;
		}
		entry, %dark_entry {
			@include entry(normal);
			&:disabled {
				@include entry(disabled);
			}
			&:backdrop {
				@include entry(backdrop);
			}
			image {
				color: if($variant==light, $dark1, $white);
				&:hover {
					color: if($variant==light, lighten($dark1, $beta1), darken($white, $beta1));
				}
			}
			selection {
				background-color: if($variant==light, transparentize($white, 0.001), transparentize($dark1, 0.001));
				color: if($variant==light, $dark1, $white);
				&:backdrop {
					background-color: if($variant==light, transparentize(darken($white, $beta1), 0.001), transparentize(lighten($dark1, $beta1), 0.001));
					color: if($variant==light, $dark1, $white);
				}
			}
		}
		.text-button:not(.suggested-action) {
			&:not(:hover) {
				border-color: none;
			}
			&.default {
				&, &:active, &:hover, &:focus {
					color: $white;
				}
			}
		}
		button.default {
			label {
				color: white;
			}
		}
		button, button.flat, button.titlebutton.appmenu {
			min-height: $merlin;
			min-width: $merlin;
			@include gtk-button($header);
		}
		.linked:not(.path-bar):not(.stack-switcher):not(buttonbox) button, .linked:not(.vertical) entry {
			&:not(:last-child) {
				margin-right: 4px;
			}
		}
		buttonbox.linked button, buttonbox.linked button.text-button ~ button {
			border-style: solid;
			border-color: $inkstone;
			&:not(:only-child) {
				border-width: 1px 0;
			}
			&:first-child {
				border-width: 1px 0 1px 1px;
			}
			&:last-child {
				border-width: 1px 1px 1px 0;
			}
			&:backdrop {
				&, &:checked {
//					border-color: lighten($inkstone, 3%);
				}
			}
		}
		.stack-switcher.linked {
			border-radius: $omega1;
			button {	
				@include merlin;
				@include gtk-button(if($header==light, dark, light), $alpha2);
				&:dir(rtl), &:dir(ltr) {
					border-radius: 0;
					-gtk-outline-radius: 0;
				}
			}
		}
		.path-bar.linked button {
			@include merlin;
			@include gtk-button(if($header==light, dark, light), $alpha2);
			label, image {
				color: if($header==light, $dark1, $white);
			}
			border-radius: 0;
			&:first-child {
				border-top-left-radius: $omega1;
				border-bottom-left-radius: $omega1;
			}
			&:last-child {
				border-top-right-radius: $omega1;
				border-bottom-right-radius: $omega1;
			}
			&.slider-button {
				box-shadow: none;
			}
		}
	}

	&.selection-mode {
		$c: $success;
		color: $selected_fg_color;
		border-color: _border_color($c);
		background-color: $c;
		~ separator, separator {
			background-image: image(_border_color($c));
		}
		&:backdrop {
			$c: _backdrop_color($c);
			border-color: _border_color($c);
			background-color: $c;
			~ separator, separator {
				background-image: image(_border_color($c));
			}
		}
		.subtitle:link {
			@extend *:link:selected;
		}
		button {
			@include gtk-button($success);
			&.flat, &.selection-menu {
				&, &:backdrop {
					&, &:disabled {
						@include clickable(undecorated);
					}
				}
			}

      &.suggested-action {
        @each $state, $t in ("", "normal"), (":hover", "hover"), (":hover:backdrop", "backdrop-hover"),
        (":active", "active"), (":disabled", "insensitive"),
        (":backdrop", "backdrop"), (":backdrop:disabled", 'backdrop-insensitive') {
          $c: white;
          $tc: $success;
          &#{$state} { @include clickable($t, $alpha3, $success); } }
      }

      &.selection-menu {
        &:backdrop, & {
          padding-left: 10px;
          padding-right: 10px;

          arrow { -GtkArrow-arrow-scaling: 1; }

          .arrow {
            -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
          }
        }
      }
    }
  }

	.tiled &,
	.tiled-top &,
	.tiled-right &,
	.tiled-bottom &,
	.tiled-left &,
	.maximized &,
	.fullscreen & {
		&.selection-mode {
			border: none;
		}
		&:backdrop, & {
			border-radius: 0;
		}
	}
	&.default-decoration {
		min-height: 26px;
		padding: 4px 6px;
		button.titlebutton {
			min-width: 26px; //22px
			min-height: 26px; //22px
			margin: 0;
			padding: 0;
		}
	}
	.solid-csd & {
		&:backdrop, & {
			&:dir(rtl), &:dir(ltr) {
				margin-left: -1px;
				margin-right: -1px;
				margin-top: -1px;
				border-radius: 0;
				box-shadow: none;
			}
		}
	}
}

headerbar {
	entry, spinbutton, button {
		margin-top: 5px;
		margin-bottom: 5px;
	}
	switch, separator {
		margin-top: 8px;
		margin-bottom: 8px;
	}
}

.background .titlebar {
	&:backdrop, & {
		border-top-left-radius: $omega1;
		border-top-right-radius: $omega1;
	}
}

.background.tiled .titlebar,
.background.tiled-top .titlebar,
.background.tiled-right .titlebar,
.background.tiled-bottom .titlebar,
.background.tiled-left .titlebar,
.background.maximized .titlebar,
.background.solid-csd .titlebar {
	&:backdrop, & {
		border-top-left-radius: 0;
		border-top-right-radius: 0;
	}
}

headerbar {
	window separator:first-child + &,
	window &:first-child {
		&:backdrop, & {
			border-top-left-radius: $omega1;
		}
	}
	window &:last-child {
		&:backdrop, & {
			border-top-right-radius: $omega1;
		}
	}
	window stack & {
		&:first-child, &:last-child {
			&:backdrop, & {
				border-top-left-radius: $omega1;
				border-top-right-radius: $omega1;
			}
		}
	}
	window.tiled &,
	window.tiled-top &,
	window.tiled-right &,
	window.tiled-bottom &,
	window.tiled-left &,
	window.maximized &,
	window.fullscreen &,
	window.solid-csd & {
		&, &:backdrop {
			&, &:first-child, &:last-child, &:only-child {
				border-top-left-radius: 0;
				border-top-right-radius: 0;
			}
		}
	}
}

.titlebar:not(headerbar) {
	window.csd > & {
		padding: 0;
		background-color: transparent;
		background-image: none;
		border-style: none;
		border-color: transparent;
		box-shadow: none;
	}
	> separator {
		background-color: transparent;
	}
	@extend %titlebar;
}

