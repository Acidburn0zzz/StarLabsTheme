@mixin clickable($type, $transparent: solid, $style:$variant) {
	$color: if($style==light, $dark1, if($style==dark, $white, $white));
	$fill: if($style==light, $white, if($style==dark, $dark1, $style));

	@if $type==normal {
		// Standard Button
//		color: $color;
		$background-normal: $fill;
		background-color: if($transparent==solid, $background-normal, transparentize($background-normal, $transparent));
		box-shadow: $shadow1;
		transition: $click;
		label, image {
			color: $color;
			&:backdrop {
				color: inherit;
			}
		}
	}
	@else if $type==focus {
		// Selected Button
		$background-focus: $fill;
                background-color: if($transparent==solid, $background-focus, transparentize($background-focus, $transparent));
		color: $color;
		box-shadow: $shadow2;
		transition: $click;
	}
	@else if $type==hover {
		// Hovering on Button
		color: $color;
		$background-hover: $fill;
                background-color: if($transparent==solid, $background-hover, transparentize($background-hover, $transparent));
		border-color: transparent;
		box-shadow: $shadow2;
		transition: $click;
	}
	@elseif $type==active {
		// Button in On State
		color: $color;
		$background-active: $fill;
                background-color: if($transparent==solid, $background-active, transparentize($background-active, $transparent));
		border-color: transparent;
		box-shadow: $shadow2;
		transition: $click;
	}
	@else if $type==disabled {
		// Button that is disabled
		color: if($variant==light, lighten($color, 50%), darken($color, 50%));
	}
	@if $type==backdrop {
		// Backdropped Standard Button
		color: $color;
//		color: if($color==$white, darken($color, $beta1), lighten($color, $beta1));
		$background-backdrop: if($fill==$dark1, lighten($fill, $beta1), darken($fill, $beta1));
                background-color: if($transparent==solid, $background-backdrop, transparentize($background-backdrop, $transparent));
		box-shadow: $shadow1;
		transition: $backdrop;
	}
	@else if $type==backdrop-focus {
		// Backdropped Selected Button
		color: if($color==$white, darken($color, $beta1), lighten($color, $beta1));
		$background-backdrop-focus: if($fill==$dark1, lighten($fill, $beta1), darken($fill, $beta1));
		background-color: if($transparent==solid, $background-backdrop-focus, transparentize($background-backdrop-focus, $transparent));
		box-shadow: $shadow2;
		transition: $backdrop;
	}
	@else if $type==backdrop-hover {
		// Backdropped Hovering on Button
		color: if($color==$white, darken($color, $beta1), lighten($color, $beta1));
		$background-backdrop-hover: if($fill==$dark1, lighten($fill, $beta1), darken($fill, $beta1));
                background-color: if($transparent==solid, $background-backdrop-hover, transparentize($background-backdrop-hover, $transparent));
		border-color: transparent;
		box-shadow: $shadow2;
		transition: $backdrop;
	}
	@elseif $type==backdrop-active {
		// Backdropped Button in On State
		color: if($color==$white, darken($color, $beta1), lighten($color, $beta1));
		$background-backdrop-active: if($fill==$accent2, lighten($fill, $beta1), darken($fill, $beta1));
                background-color: if($transparent==solid, $background-backdrop-active, transparentize($background-backdrop-active, $transparent));
		border-color: transparent;
		box-shadow: $shadow2;
		transition: $backdrop;
	}
	@elseif $type==undecorated {
		background-color: transparent;
		border-color: transparent;
		box-shadow: none;
		text-shadow: none;
		-gtk-icon-shadow: none;
	}
}



@mixin gtk-button($color:$variant, $alpha:$alpha3) {
	@include clickable(normal, $alpha, $color);
	&:hover {
		@include clickable(hover, $alpha, $color);
	}
	&:focus {
		@include clickable(focus, $alpha, $color);
	}
	&:active, &:checked {
		@include clickable(active, $alpha3, $accent2);
	}
	&:backdrop {
		@include clickable(backdrop, $alpha, $color);
		&:hover {
			@include clickable(backdrop-hover, $alpha, $color);
		}
		&:focus {
			@include clickable(backdrop-focus, $alpha, $color);
		}
		&:active, &:checked {
			@include clickable(backdrop-active, $alpha3, $accent2);
		}
	}
	&:disabled {
		@include clickable(disabled);
	}
	&.default:not(.suggested-action):not(.destructive-action) {
		@include clickable(normal, $alpha, $accent2);
	}
	&.suggested-acton {
		@include clickable(normal, $alpha, $success);
	}
	&.destructive-action {
		@include clickable(normal, $alpha, $failure);
	}
	&.flat {
		@include clickable(undecorated);
	}
}

@mixin merlin {
	min-height: 22px;
	min-width: 22px;
}
