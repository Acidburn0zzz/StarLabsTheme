@each $selector,$state in
('','-selectionmode'),
(':hover', '-hover-selectionmode'),
(':active', '-active-selectionmode'),
(':backdrop', '-backdrop-selectionmode'),
(':checked', '-checked-selectionmode'),
(':checked:hover', '-checked-hover-selectionmode'),
(':checked:active', '-checked-active-selectionmode'),
(':backdrop:checked', '-checked-backdrop-selectionmode') {
	.view.content-view.check#{$selector}:not(list),
	.content-view .tile check#{$selector}:not(list) {
		-gtk-icon-source: -gtk-scaled(url("assets/checkbox#{$state}.png"), url("assets/checkbox#{$state}@2.png"));
		background-color: transparent;
		min-width: 30px;
		min-height: 30px;
		background-image: none;
		box-shadow: none;
		border-width: 0;
	}
}

checkbutton.text-button, radiobutton.text-button {
	padding: 2px 0;
	-gtk-outline-radius: $omega2;
	outline-offset: 0;
	label:not(:only-child) {
		&:first-child {
			margin-left: 4px;
		}
		&:last-child {
			margin-right: 4px;
		}
	}
}

check, radio {
	margin: 0 4px;
	&:only-child {
		margin: 0;
	}
	popover & {
		&.left:dir(rtl) {
			margin-left: 0;
			margin-right: 12px;
		}
		&.right:dir(ltr) {
			margin-left: 12px;
			margin-right: 0;
		}
	}
	min-height: 14px;
	min-width: 14px;
	padding: 1px;
	-gtk-icon-source: none;
	&:backdrop {
		transition: $tran1;
	}
	menu menuitem &, popover & {
		margin: 0;
	}
}

%check, %radio, check, radio {
  & {
    // for unchecked
    border: 2px solid $accent2;
    $_c: if($light, white, $bg_color);

    @each $state, $t in ("", "normal"),
                        (":hover", "hover"),
                        (":hover:backdrop", "backdrop-hover"),
                        (":active", "active"),
                        (":disabled", "insensitive"),
                        (":backdrop", "backdrop"),
                        (":backdrop:disabled", 'backdrop-insensitive') {
      &#{$state} {
        @include check($t, $_c);
      }
    }
  }

  & {
    // for checked
    @each $t in (':checked:not(:indeterminate)'), (':indeterminate') {
      &#{$t} {
        @each $state, $t in ("", "normal"),
                            (":hover", "hover"),
                            (":hover:backdrop", "backdrop-hover"),
                            (":disabled", "insensitive"),
                            (":backdrop", "backdrop"),
                            (":backdrop:disabled", 'backdrop-insensitive') {
          &#{$state} {
            @include check($t, $success_color);
          }
        }
      }
    }
  }
}


%check, check {
	border-radius: 3px;
	&:checked {
		-gtk-icon-source: image(
			-gtk-recolor(url("assets/check-symbolic.svg")),
                        -gtk-recolor(url("assets/check-symbolic.symbolic.png"))
		);
	}
	&:indeterminate {
		-gtk-icon-source: image(
			-gtk-recolor(url("assets/dash-symbolic.svg")),
			-gtk-recolor(url("assets/dash-symbolic.symbolic.png"))
		);
	}
}

%radio, radio {
	border-radius: 100%;
	&:checked {
		-gtk-icon-source: image(
			-gtk-recolor(url("assets/bullet-symbolic.svg")),
			-gtk-recolor(url("assets/bullet-symbolic.symbolic.png"))
		);
	}
	&:indeterminate {
		-gtk-icon-source: image(
			-gtk-recolor(url("assets/dash-symbolic.svg")),
			-gtk-recolor(url("assets/dash-symbolic.symbolic.png"))
		);
	}
}

radio:not(:indeterminate):not(:checked):active:not(:backdrop) { 
	-gtk-icon-transform: scale(0);
}

check:not(:indeterminate):not(:checked):active:not(:backdrop) {
	-gtk-icon-transform: translate(6px, -3px) rotate(-45deg) scaleY(0.2) rotate(45deg) scaleX(0);
}

radio, check {
	&:active {
		-gtk-icon-transform: scale(0, 1);
	}
	&:checked:not(:backdrop), &:indeterminate:not(:backdrop) {
		-gtk-icon-transform: unset;
		transition: 400ms;
	}
}

menu menuitem, popover, treeview.view {
	check, radio {
		padding: 1px;
	}
}

treeview.view {
	radio, check {
		@each $t, $c in 
		(':checked:not(:indeterminate)', $success_color),
                (':indeterminate', $success_color) {
			&#{$t} {
				&, &:hover {
					background-color: $c; color: white
				}
				&:backdrop {
					background-color: _backdrop_color($c);
				}
			}
		}
	}
}

