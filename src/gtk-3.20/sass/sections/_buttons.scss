@keyframes needs_attention {
	from {
		background-image: -gtk-gradient(radial,
						center center, 0,
						center center, 0.01,
						to($accent2),
						to(transparent));
	}
	to {
		background-image: -gtk-gradient(radial,
						center center, 0,
						center center, 0.5,
						to($accent2),
						to(transparent));
	}
}

%button, button {
		@at-root %button_basic, & {
		min-height: 24px;
		min-width: 16px;
		padding: 2px 6px;
		border-radius: $omega1;
		-gtk-outline-radius: $omega1;
		@include clickable(normal);

		&.flat {
			@include clickable(undecorated);
			transition: none;
		&:hover {
			transition: $tran2;
			&:active {
				transition: $tran2;
			}
		}
		@each $state, $type in
		(":hover", "hover"),
		(":hover:backdrop", "backdrop-hover"),
		(":active, &:checked", "active"),
		(":disabled", "insensitive"),
		(":disabled:active, &:disabled:checked", "insensitive-active"),
		(":backdrop", "backdrop"),
		(":backdrop:active, &:backdrop:checked", 'backdrop-active'),
		(":backdrop:disabled", 'backdrop-insensitive'),
		(":backdrop:disabled:active, &:backdrop:disabled:checked", 'backdrop-insensitive-active') {
			&#{$state} {
				@include clickable($type);
			}
		}

	}
	&.default:not(.suggested-action):not(.destructive-action) {
		color: $dark1;
	}
	&:hover {
		@include clickable(hover);
		-gtk-icon-effect: highlight;
		&:backdrop {
			@include clickable(backdrop-hover);
		}
	}
	&:active, &:checked {
		@include clickable(active);
	}
	&:hover:checked {
		@include clickable(active-hover);
	}
	&:backdrop {
		&.flat, & {
			@include clickable(backdrop);
			&:active, &:checked { 
				@include clickable(backdrop-active);
			}
			&:disabled {
				@include clickable(backdrop-insensitive);
				&:active, &:checked {
					@include clickable(backdrop-insensitive-active);
				}
			}
		}
	}
	&.flat {
		&:backdrop, &:disabled, &:backdrop:disabled {
			@include clickable(undecorated);
		}
	}
	&:disabled {
		@include clickable(insensitive);
		&:active, &:checked {
			@include clickable(insensitive-active);
		}
	}
	&.image-button {
		min-width: 24px;
		padding-left: 2px;
		padding-right: 2px;
	}
	&.text-button {
		padding-left: 16px;
		padding-right: 16px;
	}
	&.text-button.image-button {
		padding-left: 8px;
		padding-right: 8px;
		label {
			padding-left: 8px;
			padding-right: 8px;
		}
	}
	&:drop(active) {
		color: $white;
		border-color: $dark1;
		box-shadow: inset 0 0 0 1px $dark1;
	}
}


&.osd {
	min-width: 24px;
	min-height: 32px;
	&.image-button {
		min-width: 32px;
	}
	border-radius: $omega1;
	@include clickable(normal);
	border: none;
	box-shadow: none;
	&:hover {
		@include clickable(hover);
		border: none;
		box-shadow: none;
	}
	&:active, &:checked {
		@include clickable(active);
		border: none;
		box-shadow: none;
	}
	&:disabled {
		&:backdrop, & {
			@include clickable(disabled);
			border: none;
		}
	}
	&:backdrop {
		@include clickable(backdrop);
		border: none;
	}
}


@at-root %osd_button,
.osd & {
	@include clickable(normal);
	&:hover {
		@include clickable(hover);
	}
	&:active, &:checked {
		&:backdrop, & {
			@include clickable(active);
		}
	}
	&:disabled {
		&:backdrop, & {
			@include clickable(disabled);
			}
		}
		&:backdrop {
			@include clickable(backdrop);
		}
		&.flat {
			@include clickable(undecorated);
			&:hover {
				@include clickable(hover);
			}
			&:disabled {
				@include clickable(disabled);
				background-image: none;
				border-color: transparent;
				box-shadow: none;
			}
			&:backdrop {
				@include clickable(undecorated);
			}
			&:active, &:checked {
				@include clickable(active);
			}
		}
	}
	@each $type, $fill in
	(suggested-action, $success),
	(destructive-action, $failure) {
		&.#{$type} {
			@include clickable(normal, $fill);
			&.flat {
				@include clickable(undecorated);
			}
			&:hover {
				@include clickable(hover, $fill);
			}
			&:active, &:checked {
				@include clickable(active, $fill);
			}
			&:backdrop, &.flat:backdrop {
				@include clickable(backdrop, $fill);
				&:active, &:checked {
					@include clickable(backdrop-active, $fill);
				}
				&:disabled {
					@include clickable(disabled);
					&:active, &:checked {
						@include clickable(backdrop-active, $fill);
					}
				}
			}
			&.flat {
				&:backdrop, &:disabled, &:backdrop:disabled {
					@include clickable(undecorated);
				}
			}
			&:disabled {
				@include clickable(insensitive);
				&:active, &:checked {
					@include clickable(disabled, $fill);
				}
			}

      .osd & {
        @include clickable(osd, $fill);

        &:hover { @include clickable(osd-hover, $fill); }

        &:active,
        &:checked { &:backdrop, & { @include clickable(osd-active, $fill); }}

        &:disabled { &:backdrop, & { @include clickable(osd-insensitive, $fill); }}

        &:backdrop { @include clickable(osd-backdrop, $fill); }
      }
      &:focus { outline-color: white; }
    }
  }

  &.destructive-action image {
    -gtk-icon-shadow: 1px  0px 1px darken($destructive_color, 25%),
                      0px  1px 1px darken($destructive_color, 25%),
                      0px -1px 1px darken($destructive_color, 25%),
                     -1px  0px 1px darken($destructive_color, 25%);
    &:backdrop {
      -gtk-icon-shadow: 1px  0px 1px darken($destructive_color, 10%),
                        0px  1px 1px darken($destructive_color, 10%),
                        0px -1px 1px darken($destructive_color, 10%),
                       -1px  0px 1px darken($destructive_color, 10%);
    }
  }

  .stack-switcher > & {
    // to position the needs attention dot, padding is added to the button
    // child, a label needs just lateral padding while an icon needs vertical
    // padding added too.

    > label {
      padding-left: 6px;  // label padding
      padding-right: 6px; //
    }

    > image {
      padding-left: 6px;   // image padding
      padding-right: 6px;  //
      padding-top: 3px;    //
      padding-bottom: 3px; //
    }

    &.text-button {
      // compensate text-button paddings
      padding-left: 10px;
      padding-right: 10px;
    }

    &.image-button {
      // we want image buttons to have a 1:1 aspect ratio, so compensation
      // of the padding added to the GtkImage is needed
      padding-left: 0;
      padding-right: 0;
    }

    &.needs-attention {
      > label,
      > image { @extend %needs_attention; }

      &:active,
      &:checked {
        > label,
        > image {
          animation: none;
          background-image: none;
        }
      }
    }
  }




  // hide separators
  &.font,
  &.file { separator { background-color: transparent; }}

  &.font { > box > box > label { font-weight: 500; }}

  // inline-toolbar buttons
  .inline-toolbar &, .inline-toolbar &:backdrop {
    border-radius: 2px;
    border-width: 1px;
    @extend %linked;
  }

  .primary-toolbar & { /* -gtk-icon-shadow: none; */ } // tango icons don't need shadows

  .linked > &,
  .linked > &:hover,
  .linked > &:active,
  .linked > &:checked,
  .linked > &:backdrop { @extend %linked; }

  .linked.vertical > &,
  .linked.vertical > &:hover,
  .linked.vertical > &:active,
  .linked.vertical > &:checked,
  .linked.vertical > &:backdrop { @extend %linked_vertical; }

  &.circular { // The Bloody Circul Button
    border-radius: 9999px;
    -gtk-outline-radius: 9999px;

    label { padding: 0; }

    // the followind code is needed since we use a darker bottom border on buttons, which looks pretty
    // bad with a 100% border radius (see https://bugzilla.gnome.org/show_bug.cgi?id=771205 for details),
    // so on relevant states we an additional background-image with a gradient clipped on the border-box,
    // so setting a transparent border would reveal it.
    // FIXME: take care of colored circular button.

    &:not(.flat):not(:checked):not(:active):not(:disabled):not(:backdrop),
    &:hover:not(:checked):not(:active):not(:disabled):not(:backdrop),
    &:checked, &:active {
      border-color: $borders_color;
      box-shadow: none;
    }

    &:not(.flat):not(:checked):not(:active):not(:disabled):not(:backdrop) {
      @include clickable(normal);
    }

    &:hover:not(:checked):not(:active):not(:disabled):not(:backdrop) {
      @include clickable(hover);
    }

    background-origin: padding-box, border-box;
    background-clip: padding-box, border-box;
  }
}

%needs_attention {
  animation: needs_attention 150ms ease-in;
  $_dot_shadow: _text_shadow_color();
  $_dot_shadow_r: if($variant=='light',0.5,0.45);
  background-image: -gtk-gradient(radial,
                                  center center, 0,
                                  center center, 0.5,
                                  to($accent2),
                                  to(transparent)),
                    -gtk-gradient(radial,
                                  center center, 0,
                                  center center, $_dot_shadow_r,
                                  to($accent2),
                                  to(transparent));
  background-size: 6px 6px, 6px 6px;
  background-repeat: no-repeat;

  @if $variant == 'light' { background-position: right 3px, right 4px; }

  @else { background-position: right 3px, right 2px; }

  &:backdrop { background-size: 6px 6px, 0 0;}

  &:dir(rtl) {
    @if $variant == 'light' { background-position: left 3px, left 4px; }

    @else { background-position: left 3px, left 2px; }
  }
}


// all the following is for the +|- buttons on inline toolbars, that way
// should really be deprecated...
.inline-toolbar toolbutton > button { // redefining the button look is
                                      // needed since those are flat...
  @include clickable(normal);

  &:hover { @include clickable(hover); }

  &:active,
  &:checked{ @include clickable(active); }

  &:disabled {
    @include clickable(insensitive);

    &:active,
    &:checked { @include clickable(insensitive-active); }
  }

  &:backdrop {
    @include clickable(backdrop);

    &:active,
    &:checked { @include clickable(backdrop-active); }

    &:disabled {
      @include clickable(backdrop-insensitive);

      &:active,
      &:checked { @include clickable(backdrop-insensitive-active); }
    }
  }
}

// More inline toolbar buttons
toolbar.inline-toolbar toolbutton,
toolbar.inline-toolbar toolbutton:backdrop {
  > button.flat { @extend %linked_middle; }

  &:first-child > button.flat { @extend %linked:first-child; }

  &:not(:first-child) > button.flat {
    // linked buttons will have more defined border colors
    border-left-color: $borders_color;
    &:disabled { border-left-color: $insensitive_borders_color;}
  }

  &:last-child > button.flat { @extend %linked:last-child; }

  &:only-child > button.flat { @extend %linked:only-child; }
}

%linked_middle {
  border-radius: 0;
  border-right-style: none;
  -gtk-outline-radius: 0;
}

%linked {
  @extend %linked_middle;

  &:first-child {
    border-top-left-radius: $small_radius;
    border-bottom-left-radius: $small_radius;
    -gtk-outline-radius: $small_radius 0 0 $small_radius;

  }

  &:last-child {
    border-top-right-radius: $small_radius;
    border-bottom-right-radius: $small_radius;
    border-right-style: solid;
    -gtk-outline-radius: 0 $small_radius $small_radius 0;
  }

  &:only-child {
    border-radius: $small_radius;
    -gtk-outline-radius: $small_radius;
    border-style: solid;
  }
}

%linked_vertical_middle {
  border-style: solid solid none solid;
  border-radius: 0;
  -gtk-outline-radius: 0px;
}

%linked_vertical{
  @extend %linked_vertical_middle;

  &:not(:first-child) {
    // linked buttons will have more defined border colors
    border-top-color: $borders_color;
    &:disabled { border-top-color: $insensitive_borders_color;}
  }

  &:first-child {
    border-top-left-radius: $small_radius;
    border-top-right-radius: $small_radius;
    -gtk-outline-radius: $small_radius $small_radius 0 0;
  }

  &:last-child {
    border-bottom-left-radius: $small_radius;
    border-bottom-right-radius: $small_radius;
    -gtk-outline-radius: 0 0 $small_radius $small_radius;
    border-style: solid;
  }

  &:not(:last-child) {
    // only the last button will have the 3d effect
    box-shadow: none;
  }

  &:only-child {
    border-radius: $small_radius;
    -gtk-outline-radius: $small_radius;
    border-style: solid;
  }
}

%undecorated_button {
  &, &:backdrop {
    &, &:disabled {
      background-color: transparent;
      background-image: none;
      border-color: transparent;
      box-shadow: none;
      text-shadow: none;
      -gtk-icon-shadow: none;
    }
  }
}

%jet_popover_button {
  background-color: transparent;
  &.suggested-action:not(:disabled):not(:active):not(:hover) { background-color: $success_color; border-color: $success_color; }
  &.destructive-action:not(:disabled):not(:active):not(:hover) { background-color: $destructive_color; border-color: $destructive_color; }
  &, &:hover, &:active, &:checked { box-shadow: none; }
  &:hover, &:checked:hover { background-color: lighten($inkstone, 2%); border-color: lighten($inkstone, 2%); }
  &:checked { background-color: $inkstone; border-color: $inkstone; }
  &:active, &:checked:active { background-color: lighten($inkstone, 5%) }
  &:backdrop {
    check, radio { background-color: transparent; }
    &:hover { background-color: lighten($backdrop_menu_color, 2%); } 
  }
}

/* menu buttons */
modelbutton.flat,
.menuitem.button.flat {
  min-height: 26px;
  padding-left: 5px;
  padding-right: 5px;
  border-radius: 3px;
  -gtk-outline-radius: 3px;
  outline-offset: -2px;

  @extend %undecorated_button;

  &:hover { background-color: $base_hover_color; }
  &:active { background-color: $base_active_color; }

  &:selected { @extend %selected_items; }

  &:backdrop,
  &:backdrop:hover { @extend %undecorated_button; }
}

modelbutton.flat arrow {
  background: none;

  &:hover { background: none; }

  &.left { -gtk-icon-source: -gtk-icontheme("pan-start-symbolic"); }

  &.right { -gtk-icon-source: -gtk-icontheme("pan-end-symbolic"); }
}

button.color {
  padding: 4px;

  colorswatch:only-child {
    &, overlay { border-radius: 0; }

    @if $variant == 'light' {
      box-shadow: 0 1px _text_shadow_color();

      .osd & { box-shadow: none; }
    }
  }

  @if $variant == 'light' {
    .osd &, & {
      &:disabled,
      &:backdrop,
      &:active,
      &:checked { colorswatch:only-child { box-shadow: none; }}
    }
  }
}


